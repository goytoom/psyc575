# Gender
m3 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth + time*beq_cm + DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m3)
# Gender
m3 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m3)
# Gender and Prenatal Depression
m4 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m4)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="BFGS")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
summary(m5)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (1|CoupID/PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID/PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth+beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID/PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
summary(m5)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm +  education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender and Prenatal Depression
m4 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender and Prenatal Depression
m4 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender and Prenatal Depression
m4 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + pnBDI + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
summary(m5)
# Gender and Prenatal Depression
m4 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="CG")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="BFGS")))
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m5)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + age + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m5)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + ethnicity + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBD + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m5)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time+DelMeth*beq_cm + parent + pnBDI + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time+DelMeth*beq_cm + parent + pnBDI + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m5)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
# Gender, pnBDI, parent-level demographics
m5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + ethnicity + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m5)
# Gender, pnBDI, baby demographics
m6 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + GestationAge + BabySex + (time|PersonID) + (1|CoupID), data = df_scaled)
summary(m6)
# Gender, pnBDI, baby demographics
m6 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + GestationAge + BabySex + (time|PersonID) + (1|CoupID), data = df_scaled)
summary(m6)
# Gender, pnBDI, baby demographics, does not converge with pnBDI
m6 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + GestationAge + BabySex + (time|PersonID) + (1|CoupID), data = df_scaled)
summary(m6)
interactions::interact_plot(m4,
pred = "beq_cm",
modx = "DelMeth",
plot.points = TRUE,
point.size = 0.5,
point.alpha = 0.2,
facet.modx = FALSE)
names <- c(
'(Intercept)' = "Intercept",
'time' = "Time Since Birth",
'beq_cmc' = "Person-Level Birth Stress",
'beq_cm' = "Couple-Centered Birth Stress",
'DelMeth1' = "Delivery Method (C-Section)",
'DelMeth1:beq_cm' = "C-Section X Couple-Center Birth Stress",
'parentmom' = "Gender (Female)",
'pnBDI' = "Prenatal Depression",
'time:beq_cm' = "Time Since Birth X Couple-Center Birth Stress",
'time:DelMeth1' = "Time Since Birth X C-Section",
'time:DelMeth1:beq_cm' = "Time Since Birth X C-Section X Couple-Center Birth Stress"
)
order <- c(
'(Intercept)',
'time',
'beq_cmc',
'beq_cm',
'DelMeth1',
'DelMeth1:beq_cm',
'time:DelMeth1',
'time:beq_cm',
'time:DelMeth1:beq_cm',
'parentmom',
'pnBDI'
)
msummary(list("3-Way Interaction Model" = m2,
"2-Way Interaction Model" = m3,
"Covariate Model"= m5),
group = group + term ~ model,
fmt = 2,
title = "Table 1",
coef_rename = names,
estimate = "{estimate} [{conf.low}, {conf.high}] {stars}",
statistic = NULL,
stars = TRUE,
output = "kableExtra",
add_rows = new_rows)
msummary(list("3-Way Interaction Model" = m1,
"2-Way Interaction Model" = m2,
"Covariate Model"= m5),
group = group + term ~ model,
fmt = 2,
title = "Table 1",
coef_rename = names,
estimate = "{estimate} [{conf.low}, {conf.high}] {stars}",
statistic = NULL,
stars = TRUE,
output = "kableExtra",
add_rows = new_rows)
msummary(list("3-Way Interaction Model" = m1,
"2-Way Interaction Model" = m2,
"Covariate Model"= m5),
group = group + term ~ model,
fmt = 2,
title = "Table 1",
coef_rename = names,
estimate = "{estimate} [{conf.low}, {conf.high}] {stars}",
statistic = NULL,
stars = TRUE,
output = "kableExtra",
add_rows = new_rows)
msummary(list("3-Way Interaction Model" = m1,
"2-Way Interaction Model" = m2,
"Covariate Model"= m4),
group = group + term ~ model,
fmt = 2,
title = "Table 1",
coef_rename = names,
estimate = "{estimate} [{conf.low}, {conf.high}] {stars}",
statistic = NULL,
stars = TRUE,
output = "kableExtra",
add_rows = new_rows)
new_rows <- data.frame(
term = c("Fixed effects", "Random effects", "Goodness of Fit"),
m2 = c("", "", ""),
m3 = c("", "", ""),
m5 = c("", "", ""),
m0 = c("", "", "")
)
msummary(list("3-Way Interaction Model" = m1,
"2-Way Interaction Model" = m2,
"Covariate Model"= m4),
group = group + term ~ model,
fmt = 2,
title = "Table 1",
coef_rename = names,
estimate = "{estimate} [{conf.low}, {conf.high}] {stars}",
statistic = NULL,
stars = TRUE,
output = "kableExtra",
add_rows = new_rows)
m1.5 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="BFGS")))
m1.5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth + time*beq_cm + DelMeth*beq_cm + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="BFGS")))
m1.5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth + time*beq_cm + DelMeth*beq_cm + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Neler-Mead")))
m1.5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth + time*beq_cm + DelMeth*beq_cm + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer=optim, optArgs = list(method="Nelder-Mead")))
summary(m1.5)
msummary(list("3-Way Interaction Model" = m1,
"2-Way Interaction Model" = m1.5,
"Covariate Model"= m4),
group = group + term ~ model,
fmt = 2,
title = "Table 1",
coef_rename = names,
estimate = "{estimate} [{conf.low}, {conf.high}] {stars}",
statistic = NULL,
stars = TRUE,
output = "kableExtra",
add_rows = new_rows)
names
new_rows <- data.frame(
term = c("Fixed effects", "Random effects", "Goodness of Fit"),
m2 = c("", "", ""),
m3 = c("", "", ""),
m5 = c("", "", ""),
m0 = c("", "", "")
)
msummary(list("3-Way Interaction Model" = m1,
"2-Way Interaction Model" = m1.5,
"Covariate Model"= m4),
group = group + term ~ model,
fmt = 2,
title = "Table 1",
coef_rename = names,
estimate = "{estimate} [{conf.low}, {conf.high}] {stars}",
statistic = NULL,
stars = TRUE,
output = "kableExtra",
add_rows = new_rows)
attr(new_rows, "position") <- c(1, 13, 19)
# Step 1. Create a map for the predictors and the terms in the model.
# Need to use '\\( \\)' to show math.
# Rename and reorder the rows. Need to use '\\( \\)' to
# show math. If this does not work for you, don't worry about it.
cm <- c(names,
"PersonID_sd__(Intercept)" = "\\(\\tau_0\\)",
"sd__time" = "\\(\\tau_1\\) (time)",
"sd__Observation" = "\\(\\sigma\\)")
# Step 2. Create a list of models to have one column for coef,
# one for SE, one for CI, and one for p
models <- list(
"Estimate" = m1,
"95% CI" = m1,
)
sjPlot::tab_model(m2, m3, m5,
dv.labels = c("3-Way Interaction Model", "2-Way Interaction Model", "Covariate Model"),
show.aic = T,
show.loglik = T,
string.ci = "95% CI",
pred.labels = names)
sjPlot::tab_model(m1.5, m2, m4,
dv.labels = c("3-Way Interaction Model", "2-Way Interaction Model", "Covariate Model"),
show.aic = T,
show.loglik = T,
string.ci = "95% CI",
pred.labels = names)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(tidyverse)
library(haven)
library(ggplot2)
library(here)
library(jtools)
library(lme4)
library(lmerTest)
library(glmmTMB)
library(modelsummary)
library(knitr)
library(kableExtra)
theme_set(jtools::theme_apa())
# Read in the data
df.hatch <- read_sav("../HATCH 09.29.21.sav")
# Subset Variables
df.mlm <- df.hatch %>%
select(c(CoupID,                                # Couple ID
# Couple Level                         ## COUPLE ##
DelMod, ModeofDeliverySpecific,        # Delivery Method
GesAgeWk,                              # Gestational age
Bb.sex,                                # Baby sex
# Person Level                         ## PERSON ##
contains("peritot"),                   # BEQ (birth stress)
contains("pnAge"),                     # Parent age
contains("Ethn"),                      # Parent ethnicity
contains("Educ"),                      # Parent level of education
contains("psam"),                      # Pregnancy-Specific Anxiety Measure
starts_with("pnBDI"),                  # Prenatal depression
starts_with("pnPSS"),                  # Prenatal Perceived Stress Scale
# Time Level                           ## TIME ##
bage3pp.1, bage6pp, bage12pp.1,        # Baby age
contains("PSI_t"),                     # Parenting Stress
contains("PSIt"),
contains("PSI.t"),
starts_with("BDI"),                    # Depression
starts_with("PSS"),                    # Perceived Stress Scale
starts_with("EPDS")                    # Postpartum Depression
)) %>%
select(-c(EPDS.12.1, EPDS12.2))
# Rename Variables
colnames(df.mlm) <- c("CoupID",
# Couple Level
"DelMeth", "DelMeth.Specific",
"GestationAge",
"BabySex",
# Person Level
"beq.mom", "beq.dad",
"age.mom", "age.dad",
"ethnicity.mom", "ethnicity.dad",
"education.mom", "education.dad",
"pnPSAM.mom", "pnPSAM.dad",
"pnBDI.mom", "pnBDI.dad",
"pnPSS.mom", "pnPSS.dad",
# Time Level
"BabyAge.3", "BabyAge.6", "BabyAge.12",
"PSI.3.mom", "PSI.12.mom", "PSI.12.dad",
"PSI.3.dad", "PSI.6.dad",
"PSI.6.mom",
"BDI.3.mom", "BDI.3.dad",
"BDI.6.mom", "BDI.6.dad",
"BDI.12.mom", "BDI.12.dad",
"PSS.3.mom", "PSS.3.dad",
"PSS.6.mom", "PSS.6.dad",
"PSS.12.mom", "PSS.12.dad",
"EPDS.3.mom", "EPDS.3.dad",
"EPDS.6.mom", "EPDS.6.dad",
"EPDS.12.mom", "EPDS.12.dad"
)
# Reorder PSI Variables
df.mlm <- df.mlm %>%
relocate(c("PSI.3.mom", "PSI.3.dad",
"PSI.6.mom", "PSI.6.dad",
"PSI.12.mom", "PSI.12.dad"),
.after = BabyAge.12)
# Person-Level and Time-Level Variables
df.long1 <- df.mlm %>%
# Parent-level variables
pivot_longer(
cols = beq.mom:pnPSS.dad,
names_to = c(".value", "parent"),
names_pattern = "(beq|age|ethnicity|education|pnPSAM|pnBDI|pnPSS).(mom|dad)",
names_transform = list(parent = as.factor)
) %>%
# Assign participant IDs
mutate(PersonID = seq(1:200)) %>%
# Time-level variables
pivot_longer(
cols = BabyAge.3:BabyAge.12,
names_to = c(".value", "time"),
names_pattern = "(BabyAge).(3|6|12)",
names_transform = list(time = as.integer)
) %>%
# Remove time-varying variables
select(-starts_with(c("PSI", "BDI", "PSS", "EPDS")))
# PSI Variable
df.long2 <- df.mlm %>%
pivot_longer(
cols = PSI.3.mom:EPDS.12.dad,
names_to = c(".value", "time", "parent"),
names_pattern = "(PSI|BDI|PSS|EPDS).(3|6|12).(mom|dad)",
names_transform = list(time = as.integer, parent = as.factor)
) %>%
# Select relevant variables
select(c(CoupID, time, parent, PSI, BDI, PSS, EPDS))
# Combine Data Frames
df.long <- left_join(df.long1, df.long2, by = c("CoupID", "parent", "time")) %>%
# Move identifying variable
relocate(c(PersonID, parent, time), .after = CoupID) %>%
# Remove funky formatting
mutate(beq = na_if(beq, -97.450))
#scaling and decomposing of variables
df_scaled <- df.long %>%
mutate(log_BDI = log(BDI+1)) %>%
mutate(DelMeth = as.factor(DelMeth)) %>%
mutate(log_EPDS = log(EPDS+1)) %>%
group_by(CoupID) %>% mutate(beq_cm = mean(beq)) %>% ungroup() %>% mutate(beq_cmc = beq - beq_cm, beq_st = scale(beq), beq_stc = scale(beq_cmc))
write_sav(df_scaled, here("df_scaled.sav"))
ggplot(data = df.long, aes(x = BDI)) +
geom_density() +
facet_grid(parent~time) +
labs(x = "Depression (BDI)", y = "")
ggplot(data = df_scaled, aes(x = log_BDI)) +
geom_density() +
facet_grid(parent~time) +
labs(x = "Log-Transformed Depression (BDI)", y = "")
ggplot(data = df.long, aes(x = EPDS)) +
geom_density() +
facet_grid(parent~time) +
labs(x = "PP Depression (EPDS)", y = "")
ggplot(data = df.long, aes(x = beq)) +
geom_density() +
facet_wrap(~parent) +
labs(x = "Birthing Stress (BEQ)", y = "")
ggplot(data = distinct(df.long, CoupID, .keep_all = T),
aes(x = as.factor(DelMeth),
fill = as.factor(DelMeth.Specific))) +
geom_bar(position = "stack", color = "black") +
scale_x_discrete(labels = c("Vaginal", "C-Section", "Missing")) +
scale_fill_discrete(labels = c("Natural Vaginal", "Medicated Vaginal", "Unplanned C-Section", "Planned C-Section", "Missing")) +
labs(x = "Delivery Method", y = "")
ggplot(df.long, aes(x = time, y = BDI, color = factor(CoupID))) +
geom_jitter(size = 0.5, alpha = 0.2, width = 0.1, height = 0.1) +
geom_line(aes(group = PersonID)) +  # add lines to connect the data for each person
# add a mean trajectory
stat_summary(fun = "mean", col = "black", size = 1.5, geom = "line") +
facet_wrap(~parent) +
# Suppress legend
guides(color = "none", fill = "none") +
# Labels
labs(title = "Change in Depression Levels",
x = "", y = "BDI") +
# Remove Label
scale_x_continuous(breaks = c(3,6, 12),
labels = c("3PP", "6PP", "12PP"))
ggplot(df_scaled, aes(x = beq_cmc, y = BDI, color = factor(parent))) +
geom_jitter() +
geom_smooth(method = "lm", se = F) +
facet_grid(~time)
ggstatsplot::grouped_ggbetweenstats(data = df_scaled,
x = time,
y = BDI,
grouping.var = parent,
outlier.tagging = T,
outlier.label = CoupID,
centrality.point.args = list(size = 4),
plot.type = "box",
results.subtitle = F,
pairwise.comparisons = F,
annotation.args = list(title = ""),
ylab = "", xlab = ""
)
m01 <- lmer(log_BDI ~ 1 + (time|CoupID/PersonID), data = df_scaled, control = lmerControl(optimizer = "nmkbw"))
m02 <- lmer(log_BDI ~ 1 + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = lmerControl(optimizer = "nmkbw"))
ranova(m01) #coup -> significant, person nonsignificant -> did not converge so test again without random slope on Person but random intercept
ranova(m02) #signficiant and converges!
# Raw BDI
m1 <- glmmTMB(BDI ~ beq_cmc + time*DelMeth*beq_cm + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m1)
# Log-Transformed BDI, include both random slopes for convergence! Remove the 3way interaction!
m2 <- glmmTMB(log_BDI ~ beq_cmc + time*beq_cm + beq_cm*DelMeth + time*DelMeth + (time|CoupID/PersonID), data = df_scaled, control = glmmTMBControl(optimizer = optim, optArgs = list(method="BFGS")))
summary(m2)
# Log-Transformed BDI without time interaction, does not converge with random slope, so take out!
m3 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + (1|CoupID/PersonID), data = df_scaled, control = glmmTMBControl(optimizer = optim, optArgs = list(method="BFGS")))
summary(m3)
# EPDS
m3.5 <- glmmTMB(log_EPDS ~ beq_cmc + time*DelMeth*beq_cm + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer = optim, optArgs = list(method="BFGS")))
summary(m3.5)
# Gender
m4 <- glmmTMB(BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled)
summary(m4)
# I think it is better to keep all data in the dataset and account for gender, instead of filtering out!
# Gender and Prenatal Depression -> does not converge
m5 <- glmmTMB(log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + (1|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer = optim, optArgs = list(method="BFGS")))
summary(m5)
# Gender, pnBDI, parent-level demographics, does not converge
m6 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education + (time|CoupID) + (1|CoupID:PersonID), data = df_scaled, control = glmmTMBControl(optimizer = optim, optArgs = list(method="Nelder-Mead")))
summary(m6)
# Gender, pnBDI, baby demographics, does not converge
m7 <- glmmTMB(log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + GestationAge + BabySex + (time|PersonID) + (1|CoupID), data = df_scaled)
summary(m7)
interactions::interact_plot(m4,
pred = "beq_cm",
modx = "DelMeth",
plot.points = TRUE,
point.size = 0.5,
point.alpha = 0.2,
facet.modx = FALSE)
rank(m7_robust)
library(brms)
# Same syntax; just change `lmer()` to `brm()`
m7_robust <- brm(
log_BDI ~ beq_cmc + time*DelMeth*beq_cm + parent + pnBDI + GestationAge + BabySex + (time|CoupID) + (1|CoupID:PersonID),
# Assume the errors follow a t distribution
family = student(),
data = df_scaled,
chains = 2,
iter = 4000,
control = list(adapt_delta = .95)
)
summary(m7_robust)
# Same syntax; just change `lmer()` to `brm()`
m6_robust <- brm(
log_BDI ~ beq_cmc + time + DelMeth*beq_cm + parent + pnBDI + ethnicity + age + education +(time|CoupID) + (1|CoupID:PersonID),
# Assume random effects follow a t distribution
# Assume the errors follow a t distribution
family = student(),
data = df_scaled,
chains = 2,
iter = 4000,
control = list(adapt_delta = .95)
)
summary(m6_robust)
